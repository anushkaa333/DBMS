GROUP : B
	NAME: Anushka M Mulay	
	ROLL NO: 35040
	BATCH: B
	CLASS:   TE(IT)-A
	STATEMENT: 3.Execute the aggregate functions like count, sum, avg etc. 
	on the suitable database. Make use of built in functions 			    
	according to the need of the database chosen. 
	Retrieve the data from the database based on time and date functions ike now(),date(),day(),time() etc.
	 Use group by and having clauses.



Enter password: ****
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.21 MySQL Community Server - GPL

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> use university;
Database changed

Problem Statement 1) Display total salary of all staff members from instructor
Query:
mysql> select sum(salary) as total from instructor;
Output:
+--------+
| total  |
+--------+
| 650000 |
+--------+
1 row in set (0.11 sec)


Problem Statement 2)Display total salary of all staff members who are from music department
Query:
mysql> select sum(salary) from instructor where dept_name='Music';
Output:
+-------------+
| sum(salary) |
+-------------+
|      220000 |
+-------------+
1 row in set (0.10 sec)



Problem Statement:3)Find no. of staff memebers from physics department
Query:
mysql> select count(inst_id) from instructor where dept_name='Physics';
Output:
+----------------+
| count(inst_id) |
+----------------+
|              2 |
+----------------+
1 row in set (0.00 sec)



Problem Statement:4)Display average salary of all staff members from instructor
Query:
mysql> select avg(salary) from instructor ;
Output:
+-------------+
| avg(salary) |
+-------------+
|  92857.1429 |
+-------------+
1 row in set (0.01 sec)



Problem Statement:5)Display minimum salary from instructor
Query:
mysql> select min(salary) from instructor ;
Output:
+-------------+
| min(salary) |
+-------------+
|       80000 |
+-------------+
1 row in set (0.00 sec)


Problem Statement:6) Display maximum salary from instructor
Query:
mysql> select max(salary) from instructor ;
Output:
+-------------+
| max(salary) |
+-------------+
|      110000 |
+-------------+
1 row in set (0.00 sec)


Problem Statement 7) names of instructor not between 50000 and 65000
Query:
mysql> select inst_name from instructor where salary not between 50000 and 65000;
Output:
+-----------+
| inst_name |
+-----------+
| ABC       |
| PQR       |
| EFG       |
| XYZ       |
| LMN       |
| UVW       |
| HIJ       |
+-----------+
7 rows in set (0.01 sec)


Problem Statement 8)Display minimum & maximum no. of credits given to student in each department
Query:
mysql> select min(tot_credits) as min, max(tot_credits), dept_name as max from student group by(dept_name);
Output:
+------+------------------+----------+
| min  | max(tot_credits) | max      |
+------+------------------+----------+
|    7 |                7 | Biology  |
|    6 |                9 | Computer |
|    9 |                9 | History  |
|    8 |                9 | Music    |
|    9 |                9 | Physics  |
+------+------------------+----------+
5 rows in set (0.00 sec)


Problem Statement:9) Find average salary in each department
Query:
mysql> select avg(salary), dept_name from instructor group by(dept_name);
Output:
+-------------+-----------+
| avg(salary) | dept_name |
+-------------+-----------+
|  85000.0000 | Biology   |
|  85000.0000 | Computer  |
|  80000.0000 | History   |
| 110000.0000 | Music     |
|  90000.0000 | Physics   |
+-------------+-----------+
5 rows in set (0.00 sec)


Problem Statement:10) Find average salary in each department where average salary of all instructor is more than 40000
Query:
mysql> select avg(salary), dept_name from instructor group by (dept_name) having avg(salary) > 40000;
Output:
+-------------+-----------+
| avg(salary) | dept_name |
+-------------+-----------+
|  85000.0000 | Biology   |
|  85000.0000 | Computer  |
|  80000.0000 | History   |
| 110000.0000 | Music     |
|  90000.0000 | Physics   |
+-------------+-----------+
5 rows in set (0.10 sec)


Problem Statement:11)Find no. of instructor with department name in each department
Query:
mysql> select count(inst_id), dept_name from instructor group by(dept_name);
Output:
+----------------+-----------+
| count(inst_id) | dept_name |
+----------------+-----------+
|              1 | Biology   |
|              1 | Computer  |
|              1 | History   |
|              2 | Music     |
|              2 | Physics   |
+----------------+-----------+
5 rows in set (0.00 sec)


Problem Statement:12)Find department name with average salary not in between 10000 and 100000
Query:
mysql> select avg(salary), dept_name from instructor group by(dept_name) having avg(salary) not between 10000 and 100000;
Output:
+-------------+-----------+
| avg(salary) | dept_name |
+-------------+-----------+
| 110000.0000 | Music     |
+-------------+-----------+
1 row in set (0.00 sec)


Problem Statement:13)Find all courses taught either in sem I or in sem II or both
Query:
mysql> (select course_id from teaches where semester='I') union (select course_id from teaches where semester='II');
Output:
+-----------+
| course_id |
+-----------+
| Bio-1     |
| Bio-2     |
| Phy-2     |
| CS-2      |
| Mu-1      |
+-----------+
5 rows in set (0.08 sec)


Problem Statement:14)Find out set of courses taught in sem I fy and sem II Ty
Query:
 mysql> select course_id from teaches where semester='I' and year='FY' and course_id in (select course_id from teaches where semester='II' and year='TY');
Output:
Empty set (0.13 sec)


Problem Statement:15)Find out set of courses taught in sem I fy but not in sem II Ty
Query:
mysql> select course_id from teaches where semester='I' and year='FY' and course_id not in ( select course_id from teaches where semester='II' and year='TY');
Output:
+-----------+
| course_id |
+-----------+
| Bio-1     |
| Bio-2     |
+-----------+
2 rows in set (0.00 sec)


Problem Statement:16)Names of instructor with course id of all courses they teach
Query:
mysql> select inst_name, course_id from instructor natural join teaches;
Output:
+-----------+-----------+
| inst_name | course_id |
+-----------+-----------+
| HIJ       | Bio-1     |
| EFG       | Phy-2     |
| ABC       | CS-2      |
| HIJ       | Bio-2     |
| LMN       | Mu-1      |
+-----------+-----------+
5 rows in set (0.00 sec)


Problem Statement:17)Names of instructor along with title of all courses they teach
Query:
mysql> select inst_name, title from instructor, course where instructor.dept_name= course.dept_name;
Output:
+-----------+--------------------+
| inst_name | title              |
+-----------+--------------------+
| ABC       | Intro to CS        |
| ABC       | Robotics           |
| PQR       | Music audio        |
| PQR       | Music video promo  |
| EFG       | Physics principles |
| XYZ       | World History      |
| LMN       | Music audio        |
| LMN       | Music video promo  |
| UVW       | Physics principles |
| HIJ       | Into to bio        |
| HIJ       | Genetics           |
+-----------+--------------------+
11 rows in set (0.00 sec)


Problem Statement:18)Left outer join
Query:
mysql> select inst_name, course_id from instructor left outer join teaches using(inst_id);
Output:
+-----------+-----------+
| inst_name | course_id |
+-----------+-----------+
| ABC       | CS-2      |
| PQR       | NULL      |
| EFG       | Phy-2     |
| XYZ       | NULL      |
| LMN       | Mu-1      |
| UVW       | NULL      |
| HIJ       | Bio-1     |
| HIJ       | Bio-2     |
+-----------+-----------+
8 rows in set (0.10 sec)


Problem Statement:19)Right outer join (similar to 16)
Query:
mysql> select inst_name , course_id from instructor right outer join teaches using(inst_id);
Output:
+-----------+-----------+
| inst_name | course_id |
+-----------+-----------+
| HIJ       | Bio-1     |
| EFG       | Phy-2     |
| ABC       | CS-2      |
| HIJ       | Bio-2     |
| LMN       | Mu-1      |
+-----------+-----------+
5 rows in set (0.00 sec)



Problem Statement:20)Inner join
Query:
mysql> select inst_name , course_id from instructor inner join teaches using(inst_id);
Output:
+-----------+-----------+
| inst_name | course_id |
+-----------+-----------+
| HIJ       | Bio-1     |
| EFG       | Phy-2     |
| ABC       | CS-2      |
| HIJ       | Bio-2     |
| LMN       | Mu-1      |
+-----------+-----------+
5 rows in set (0.00 sec)


Problem Statement 21)System date
Query:
mysql> select SysDate();
Output:
+---------------------+
| SysDate()           |
+---------------------+
| 2020-09-30 00:07:39 |
+---------------------+
1 row in set (0.00 sec)


Problem Statement 22)String length
Query:
mysql> select length(inst_name) from instructor;
Output:
+-------------------+
| length(inst_name) |
+-------------------+
|                 3 |
|                 3 |
|                 3 |
|                 3 |
|                 3 |
|                 3 |
|                 3 |
+-------------------+
7 rows in set (0.00 sec)


Problem Statement 23)Substring
Query:
mysql> select dept_name, substr(dept_name,1,4) from department;
Output:
+-----------+-----------------------+
| dept_name | substr(dept_name,1,4) |
+-----------+-----------------------+
| Biology   | Biol                  |
| Computer  | Comp                  |
| History   | Hist                  |
| Music     | Musi                  |
| Physics   | Phys                  |
+-----------+-----------------------+
5 rows in set (0.16 sec)


Problem Statement 24)Replace
Query:
mysql> select replace (inst_name, 'EFG', 'DOH') from instructor;
Output:
+-----------------------------------+
| replace (inst_name, 'EFG', 'DOH') |
+-----------------------------------+
| ABC                               |
| PQR                               |
| DOH                               |
| XYZ                               |
| LMN                               |
| UVW                               |
| HIJ                               |
+-----------------------------------+
7 rows in set (0.00 sec)



Problem Statement 25)Full Join
Query:
mysql> select inst_name, course_id from teaches full join instructor using(inst_id);
Output:
+-----------+-----------+
| inst_name | course_id |
+-----------+-----------+
| HIJ       | Bio-1     |
| EFG       | Phy-2     |
| ABC       | CS-2      |
| HIJ       | Bio-2     |
| LMN       | Mu-1      |
+-----------+-----------+
5 rows in set (0.00 sec)



Problem Statement 26)Use of now
Query:
mysql> select now();
Output:
+---------------------+
| now()               |
+---------------------+
| 2020-09-30 00:06:11 |
+---------------------+
1 row in set (0.01 sec)


Problem Statement 27) Avg capacity from classroom
Query:
mysql> select avg(capacity) from classroom;
Output:
+---------------+
| avg(capacity) |
+---------------+
|      108.0000 |
+---------------+
1 row in set (0.17 sec)


Problem Statement 28)Find names of instructor with salary amount between 60000 and 95000
Query:
mysql> select salary,inst_name from instructor where salary between 60000 and 95000;
Output:
+--------+-----------+
| salary | inst_name |
+--------+-----------+
|  85000 | ABC       |
|  90000 | EFG       |
|  80000 | XYZ       |
|  90000 | UVW       |
|  85000 | HIJ       |
+--------+-----------+
5 rows in set (0.00 sec)


Problem Statement 29)Find names of instructor with salary amount not between 30000 and 50000
Query:
mysql> select salary,inst_name from instructor where salary not between 60000 and 95000;
Output:
+--------+-----------+
| salary | inst_name |
+--------+-----------+
| 110000 | PQR       |
| 110000 | LMN       |
+--------+-----------+
2 rows in set (0.00 sec)


Problem Statement 30) Select min and max classroom capacity from each building
Query:
mysql> select max(capacity) as max, min(capacity), building as min from classroom group by(building);
Output:
+------+---------------+-----+
| max  | min(capacity) | min |
+------+---------------+-----+
|  120 |           120 |   1 |
|  120 |           120 |   2 |
|   60 |            60 |   3 |
|  180 |           180 |   4 |
|   60 |            60 |   5 |
+------+---------------+-----+
5 rows in set (0.00 sec)



Conclusion : Thus, we have executed the aggregate functions like count, sum, avg etc. 
	and have retrieved the data from the database based on time and date functions like now(),date(),day(),time() etc & 
	Used group by and having clauses.