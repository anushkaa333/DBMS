/*
        GROUP : B
        NAME:  Anushka M Mulay      
        ROLL NO: 35040
        BATCH: B
        CLASS:   TE(IT)-A
        STATEMENT: 6.Write and execute PL/SQL stored procedure and function to perform 
		a suitable task on the database. Demonstrate its use.
        */
       
        //PROCEDURES ( atleast 6 to 7)
	1. Problem Statement
	2. Creation of procedure
	3. Output

        //FUNCTIONs ( atleast 6 to 7)
	1. Problem Statement
	2. Creation of procedure
	3. Output

        /*
    




//Procedure




Enter password: ****
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 19
Server version: 8.0.21 MySQL Community Server - GPL

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> use university;
Database changed

Problem Statement:1) Write procedure for students to display all records from student

Query:
mysql> delimiter //
mysql> create procedure p1()
    -> begin
    -> select * from student;
    -> end;
    -> //
Query OK, 0 rows affected (0.24 sec)

Output :
mysql> delimiter //
mysql> call p1();
    -> //
+-----+-------+-------------+-----------+
| sid | sname | tot_credits | dept_name |
+-----+-------+-------------+-----------+
| s1  | A     |           8 | Music     |
| s2  | B     |           9 | Computer  |
| s3  | C     |           9 | Music     |
| s4  | D     |           9 | Physics   |
| s5  | E     |           7 | Biology   |
| s6  | F     |           6 | Computer  |
| s7  | G     |           9 | History   |
+-----+-------+-------------+-----------+
7 rows in set (0.02 sec)

Query OK, 0 rows affected (0.05 sec)




Problem Statement:2) Write a procedure to add new employee into emp table

Query:
mysql> delimiter //
mysql> create procedure p2(in eid int, in ename varchar(10), in esal int)
    -> begin
    -> insert into employee(e_id, e_name, e_salary) values (eid, ename, esal);
    -> end; //
Query OK, 0 rows affected (0.23 sec)

Output:
mysql> call p2(300, 'mm', 3000);
    -> //
Query OK, 1 row affected (0.09 sec)

mysql> select * from employee;
    -> //
+------+--------+----------+
| e_id | e_name | e_salary |
+------+--------+----------+
|  100 | MH     |    10000 |
|  300 | mm     |     3000 |
+------+--------+----------+
2 rows in set (0.00 sec)

mysql>



Problem Statement:3)Find out min, max, avg salary of instructor using procedure
Query:
mysql> delimiter //
mysql> create procedure p3(out lowsal int, out highsal int, out avgsal int)
    -> begin
    -> select min(e_salary) into lowsal from employee;
    -> select max(e_salary) into highsal from employee;
    -> select avg(e_salary) into avgsal from employee;
    -> end;
    -> //
Query OK, 0 rows affected (0.13 sec)

Output:
mysql> call p3(@lowsal, @highsal, @avgsal);
    -> //
Query OK, 1 row affected (0.11 sec)

mysql> select @lowsal, @highsal, @avgsal;
    -> //
+---------+----------+---------+
| @lowsal | @highsal | @avgsal |
+---------+----------+---------+
|    2000 |    10000 |    5000 |
+---------+----------+---------+
1 row in set (0.00 sec)




Problem Statememt: 4)Perform addition using procedure
Query:
mysql> delimiter //
mysql> create procedure p4(a int, b int, out c int)
    -> begin
    -> select (a+b) into c;
    -> end; //
Query OK, 0 rows affected (0.35 sec)

Output:
mysql> call p4(5,5,@c);
    -> //
Query OK, 1 row affected (0.00 sec)

mysql> select @c;
    -> //
+------+
| @c   |
+------+
|   10 |
+------+
1 row in set (0.00 sec)


Problem Statement:5)Find the larger number among two numbers
Query:
mysql> delimiter //
mysql> create procedure p5(a int, b int)
    -> begin
    -> if (a>b) then
    -> select ('a is grater');
    -> else
    -> select ('b is greater');
    -> end if;
    -> end; //
Query OK, 0 rows affected (0.13 sec)

Output:
mysql> call p5(5,6);
    -> //
+--------------+
| b is greater |
+--------------+
| b is greater |
+--------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)


Problem Statement:6)Find the larger number among three numbers using nested if else
Query:
mysql> delimiter //
mysql> create procedure p6(a int, b int, c int)
    -> begin
    -> if(a>b) then
    -> select ('a is greater');
    -> else if(b>c) then
    -> select ('b is greater');
    -> else
    -> select ('c is greater');
    -> end if;
    -> end if;
    -> end;
    -> //
Query OK, 0 rows affected (0.12 sec)

Output:
mysql> call p6(3,5,6);
    -> //
+--------------+
| c is greater |
+--------------+
| c is greater |
+--------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)



Problem Statement:7)Write a procedure that returns total salary of all instructor
Query:
mysql> delimiter //
mysql> create procedure p8()
    -> begin
    -> select sum(salary) from instructor;
    -> end;
    -> //
Query OK, 0 rows affected (0.24 sec)

Output:
mysql> call p8();
    -> //
+-------------+
| sum(salary) |
+-------------+
|      670000 |
+-------------+
1 row in set (0.04 sec)

Query OK, 0 rows affected (0.05 sec)



Problem Statement:8)Write a procedure that returns total salary of all instructor

Query:
mysql> delimiter //
mysql> create procedure p9(in d_name varchar(10), out total int)
    -> begin
    -> select sum(salary) into total from instructor where dept_name=d_name;
    -> end;
    -> //
Query OK, 0 rows affected (0.24 sec)

Output:

mysql> call p9('Computer', @total);
    -> //
Query OK, 1 row affected (0.00 sec)

mysql> select @total;
    -> //
+--------+
| @total |
+--------+
|  85000 |
+--------+
1 row in set (0.00 sec)



Problem Statememt: 9)Write procedure that accepts employee no and returns the salarystatus as high, low based on his salary
Query:
mysql> delimiter //
mysql> create procedure psal(id int, out sal int)
    -> begin
    -> select salary into sal from instructor where inst_id=id;
    -> if(sal>65000) then
    -> select ('the status is high');
    -> else
    -> select ('the status is low');
    -> end if;
    -> end; //
Query OK, 0 rows affected (0.23 sec)

Output:
mysql> call psal(114, @sal);
    -> //
+--------------------+
| the status is high |
+--------------------+
| the status is high |
+--------------------+
1 row in set (0.12 sec)

Query OK, 0 rows affected (0.14 sec)

mysql> call psal(121, @sal);
    -> //
+-------------------+
| the status is low |
+-------------------+
| the status is low |
+-------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.02 sec)


Problem Statememt: 10)Write procedure that accepts employee no and returns no of employee working in that department
Query:
mysql> delimiter //
mysql> create procedure p7(in d_name varchar(10), out d_count int)
    -> begin
    -> select count(inst_id) into d_count from instructor where dept_name=d_name;
    -> end;
    -> //
Query OK, 0 rows affected (0.18 sec)

Output:

mysql> call p7('Physics', @d_count);
    -> //
Query OK, 1 row affected (0.00 sec)

mysql> select @d_count;
    -> //
+----------+
| @d_count |
+----------+
|        2 |
+----------+
1 row in set (0.00 sec)


Conclusion : Thus, we haveï»¿ executed PL/SQL stored procedure to perform 
		a suitable task on the database. 
       